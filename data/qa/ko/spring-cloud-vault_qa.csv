"Spring Cloud Vault Config는 어떤 용도로 사용되나요?","Spring Cloud Vault Config는 Spring Vault를 기반으로 한 분산 시스템에서 외부화된 구성을 위한 클라이언트 측 지원을 제공합니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/index.html)"
"Vault에서 어떤 종류의 비밀을 관리할 수 있나요?","Vault는 정적 및 동적 비밀, 예를 들어 원격 애플리케이션/리소스에 대한 사용자 이름/비밀번호, MySQL, PostgreSQL, Apache Cassandra, Couchbase, MongoDB, Consul, AWS 등의 외부 서비스에 대한 자격 증명을 관리할 수 있습니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/index.html)"
"Spring Cloud Vault Config에서 어떤 고급 주제를 다룰 수 있나요?","Spring Cloud Vault Config에서 다루는 고급 주제에는 서비스 검색, Fail-Fast, SSL 구성, 수명 주기 관리 등이 포함됩니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/index.html)"
"Vault와 Spring Cloud Vault를 시작하기 위한 필수 전제 조건은 무엇인가요?","Vault와 이 가이드를 시작하기 위해서는 wget, openssl 및 unzip을 제공하는 *NIX와 유사한 운영 체제와 적어도 Java 8 및 적절하게 구성된 JAVA_HOME 환경 변수가 필요합니다."
"Vault와 Spring Cloud Vault를 사용하여 통합 테스트를 위한 Vault 설정을 어떻게 구성하나요?","Vault와 Spring Cloud Vault를 사용하여 통합 테스트를 위한 Vault 설정을 구성하려면 install_vault.sh 스크립트를 실행하거나 이 가이드의 지침에 따라 Vault 설치 파일을 다운로드하고 압축을 해제하여 Vault를 설치하고, Vault용 SSL 인증서를 생성하고, Vault 서버를 시작해야 합니다."
"Spring Cloud Vault를 사용하여 애플리케이션을 인증하려면 어떻게 해야 하나요?","Spring Cloud Vault를 사용하여 애플리케이션을 인증하려면 vault 프로젝트 문서에 설명된 대로 여러 인증 메커니즘을 사용할 수 있습니다. 빠른 시작을 위해 Vault 초기화 중에 출력된 루트 토큰을 사용할 수 있지만, 보안 요구 사항을 신중하게 고려해야 합니다."
"Spring Cloud Vault에서 ConfigData API를 사용하는 주된 장점은 무엇인가요?","ConfigData API를 사용하면 어떤 구성 시스템을 가져올지, 어떤 순서로 가져올지 지정할 수 있어 훨씬 유연합니다. 이는 부트스트랩 컨텍스트를 사용하는 것보다 더 많은 유연성을 제공하여 속성 소스 순서에 대한 더 많은 제어력을 제공합니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/config-data.html)"
"Spring Cloud Vault에서 vault://와 vault:///<context-path>의 차이점은 무엇인가요?","vault://는 모든 활성화된 Secret Backends에 대한 속성 소스를 마운트하는 기본 위치를 사용합니다. vault:///<context-path>는 개별적으로 지정하고 마운트되는 컨텍스트 위치를 지정합니다. 각 위치는 고유한 속성 소스로 마운트됩니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/config-data.html)"
"Spring Cloud Vault에서 Vault 구성 위치를 선택적으로 만들거나 필수로 만들 수 있는 방법은 무엇인가요?","위치 문자열을 통해 Vault 구성 위치가 선택 사항인지 필수 사항인지(기본값)를 표현할 수 있습니다. 선택적 위치는 Vault 지원이 spring.cloud.vault.enabled=false로 비활성화된 경우 애플리케이션 시작 중에 건너뜁니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/config-data.html)"
"Vault에서 지원하는 인증 방법 중 하나는 무엇인가요?","Vault는 다양한 인증 방법을 제공하여 조직의 다양한 보안 요구 사항을 충족시킵니다. 지원되는 인증 방법에는 토큰 인증, AppId 인증, Vault Agent 인증, NONE 인증 등이 있습니다."
"Spring Cloud Vault에서 토큰 인증을 사용하려면 어떻게 해야 하나요?","토큰 인증은 Vault 내에서 인증을 위한 핵심 방법입니다. Spring Cloud Vault에서 토큰 인증을 사용하려면 application.yml 파일에 `spring.cloud.vault.authentication.TOKEN.token` 속성을 설정하여 정적 토큰을 제공하거나 Vault CLI가 토큰을 캐시하는 기본 위치인 ~/.vault-token에서 토큰을 검색할 수 있습니다."
"Spring Cloud Vault에서 Vault Agent 인증을 사용하려면 어떻게 해야 하나요?","Vault Agent는 Spring Vault의 SessionManager 기능을 Auto-Auth 기능으로 구현합니다. Vault Agent 인증을 사용하려면 application.yml 파일에서 `spring.cloud.vault.authentication` 속성을 `APPID`로 설정하고 `app-id.user-id` 속성을 적절한 사용자 ID 방법으로 설정합니다. IP 또는 Mac 주소를 기반으로 사용자 ID를 사용하려면 SHA256 해시를 생성하여 구성에 포함해야 합니다."
"Spring Cloud Vault의 Key-Value Secret Backend는 어떤 기능을 제공하나요?","Spring Cloud Vault의 Key-Value Secret Backend는 버전 관리(v2)와 비버전 관리(v1) 두 가지 버전을 지원합니다. 이 백엔드는 임의의 값을 키-값 저장소로 저장할 수 있으며, 단일 컨텍스트는 하나 이상의 키-값 튜플을 저장할 수 있습니다. 컨텍스트는 계층적으로 구성될 수 있으며, Spring Cloud Vault는 비밀이 버전 관리를 사용하는지 여부를 자동으로 판단하고 해당 URL에 매핑합니다. 또한, 애플리케이션 이름과 기본 컨텍스트 이름(application)을 활성 프로파일과 함께 사용할 수 있습니다. /secret/{application}/{profile}, /secret/{application}, /secret/{default-context}/{profile}, /secret/{default-context}와 같은 경로를 제공하며, 애플리케이션 이름은 spring.cloud.vault.kv.application-name, spring.cloud.vault.application-name, spring.application.name 속성에 의해 결정됩니다. 또한, 프로파일은 spring.cloud.vault.kv.profiles, spring.profiles.active 속성에 의해 결정됩니다. 다른 컨텍스트의 비밀은 애플리케이션 이름에 경로를 추가하여 쉼표로 구분하여 얻을 수 있습니다. 예를 들어, usefulapp, mysql1, projectx/aws와 같은 폴더가 사용됩니다. Spring Cloud Vault는 활성 프로파일을 가능한 컨텍스트 경로 목록에 추가하며, 활성 프로파일이 없는 경우 프로파일 이름이 있는 컨텍스트에 대한 액세스를 건너뜁니다. 속성은 저장된 그대로 노출되며(추가 접두사 없음), Spring Cloud Vault는 마운트 경로가 버전 관리 키-값 백엔드를 사용하는지 여부에 따라 마운트 경로와 실제 컨텍스트 경로 사이에 data/ 컨텍스트를 추가합니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/html/secret-backends.html#kv-secret-backend)"
"Spring Cloud Vault를 사용하여 HashiCorp Consul의 자격 증명을 얻는 방법은 무엇인가요?","Spring Cloud Vault를 사용하여 HashiCorp Consul의 자격 증명을 얻으려면 spring-cloud-vault-config-consul 종속성을 추가해야 합니다. 통합을 활성화하려면 spring.cloud.vault.consul.enabled=true로 설정하고, spring.cloud.vault.consul.role로 역할 이름을 제공해야 합니다. 얻은 토큰은 spring.cloud.consul.token에 저장되므로, Spring Cloud Consul을 사용하는 경우 추가 구성 없이 생성된 자격 증명을 가져올 수 있습니다. spring.cloud.vault.consul.token-property를 설정하여 속성 이름을 구성할 수 있습니다. Spring Cloud Vault는 enabled, role, backend, token-property 속성을 제공하여 Consul 백엔드 구성 사용을 활성화하고, Consul 역할 정의의 역할 이름을 설정하며, Consul 마운트의 경로를 설정하고, Consul ACL 토큰이 저장되는 속성 이름을 설정합니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/html/secret-backends.html#consul-secret-backend)"
"Spring Cloud Vault에서 여러 데이터베이스 비밀 백엔드를 구성하는 방법은 무엇인가요?","Spring Cloud Vault에서 여러 데이터베이스 비밀 백엔드를 구성하려면 spring-cloud-vault-config-databases 종속성을 추가하고, spring.cloud.vault.databases.* 네임스페이스 아래에 여러 데이터베이스 비밀 백엔드를 구성해야 합니다. 이 구성은 여러 데이터베이스 백엔드를 받아들이고 지정된 속성에 자격 증명을 구체화합니다. username-property 및 password-property를 적절하게 구성해야 합니다. Spring Cloud Vault는 <name>, <name>.enabled, <name>.role, <name>.backend, <name>.username-property, <name>.password-property 속성을 제공하여 데이터베이스 구성의 서술적 이름, 데이터베이스 백엔드 구성 사용을 활성화하는 값, 데이터베이스 역할 정의의 역할 이름, 데이터베이스 마운트의 경로, 데이터베이스 사용자 이름이 저장되는 속성 이름, 데이터베이스 암호가 저장되는 속성 이름을 설정합니다. 속성 그림자를 피하기 위해 고유한 속성 이름을 사용해야 합니다. (출처: https://docs.spring.io/spring-cloud-vault/reference/html/secret-backends.html#database-secret-backend)"
"Spring Cloud Vault에서 Vault 서버를 발견하기 위해 Spring Cloud Consul의 DiscoveryClient를 사용하려면 어떻게 해야 하나요?","Spring Cloud Vault에서 Vault 서버를 발견하기 위해 Spring Cloud Consul의 DiscoveryClient를 사용하려면, application.yml 또는 환경 변수에 적절한 발견 구성을 설정하고 spring.cloud.vault.discovery.enabled=true (기본값은 false)를 설정해야 합니다. 또한, spring.cloud.vault.discovery.serviceId 속성으로 default service id를 변경할 수 있습니다. 발견 클라이언트 구현은 모두 일부 종류의 메타데이터 맵을 지원하며, 일부 추가 속성은 클라이언트가 올바르게 연결할 수 있도록 서비스 등록 메타데이터에 구성되어야 할 수 있습니다. 링크: https://docs.spring.io/spring-cloud-vault/reference/advanced-topics.html"
"Spring Cloud Vault에서 Vault 서버에 연결할 수 없는 경우 서비스 시작을 실패하도록 설정하려면 어떻게 해야 하나요?","Spring Cloud Vault에서 Vault 서버에 연결할 수 없는 경우 서비스 시작을 실패하도록 설정하려면, 부트스트랩 구성 속성 spring.cloud.vault.fail-fast=true를 설정하면 클라이언트가 예외로 중지됩니다. 링크: https://docs.spring.io/spring-cloud-vault/reference/advanced-topics.html"
"Spring Cloud Vault에서 Vault Enterprise를 사용하여 여러 Vault를 단일 Vault 서버에 격리하는 네임스페이스를 지원하려면 어떻게 해야 하나요?","Spring Cloud Vault에서 Vault Enterprise를 사용하여 여러 Vault를 단일 Vault 서버에 격리하는 네임스페이스를 지원하려면, spring.cloud.vault.namespace=…를 설정하여 네임스페이스를 구성하고, Vault RestTemplate 또는 WebClient를 사용할 때 모든 나가는 HTTP 요청에 네임스페이스 헤더 X-Vault-Namespace를 활성화해야 합니다. 이 기능은 Vault Community edition에서는 지원되지 않으며 Vault 작업에 영향을 미치지 않습니다. 링크: https://docs.spring.io/spring-cloud-vault/reference/advanced-topics.html"
"스프링 클라우드 볼트에서 애플리케이션 속성은 어떤 용도로 사용되나요?","스프링 클라우드 볼트에서 애플리케이션 속성은 application.properties 파일, application.yml 파일 또는 명령줄 스위치에서 지정할 수 있는 다양한 속성입니다. 이 부록에서는 일반적인 스프링 클라우드 볼트 속성 목록과 해당 속성을 소비하는 기본 클래스에 대한 참조를 제공합니다."
"스프링 클라우드 볼트에서 app-id 인증 백엔드의 mount path는 무엇인가요?","스프링 클라우드 볼트에서 app-id 인증 백엔드의 mount path는 'spring.cloud.vault.app-id.app-id-path'입니다."
"스프링 클라우드 볼트에서 AWS-EC2 인증 백엔드의 URL of the AWS-EC2 PKCS7 identity document는 어떤 속성으로 정의되나요?","스프링 클라우드 볼트에서 AWS-EC2 인증 백엔드의 URL of the AWS-EC2 PKCS7 identity document는 'spring.cloud.vault.aws-ec2.identity-document' 속성으로 정의됩니다."
